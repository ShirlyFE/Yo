@charset "utf-8";
@import "../core/variables";
@import "../core/classes";

/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */

// 定义按钮的基础构造
// 使用方法请查看 yo-btn.scss
@mixin _btn{
	display: inline-block;
	overflow: hidden;
	// 如果map-get($btn,padding)不等于0，则需要内补白
	@if map-get($btn,padding) != 0 {
		padding: map-get($btn,padding);
	}
	// 如果需要边框，则使用加深的背景色作为边框色
	@if map-get($btn,is-border) != false {
		border: 1px solid darken(map-get($btn,bgcolor),10%);
	} @else {
		border: 0 none;
	}
	// 内阴影，用来描内部的1px白边
	box-shadow: inset 1px 1px rgba(255,255,255,.1);
	// 如果map-get($btn,radius)大于0，则需要圆角
	@if map-get($btn,radius) > 0 {
		border-radius: map-get($btn,radius);
	}
	background-color: map-get($btn,bgcolor);
	color: map-get($btn,color);
	text-align: center;
	vertical-align: middle;
	cursor: pointer;
	&:hover,
	&:focus,
	&:active{
		// 如果map-get($btn,is-border)不为false，则重绘经过时的边框色
		@if map-get($btn,is-border) != false {
			border-color: darken(map-get($btn,bgcolor),6%);
		}
		background-color: lighten(map-get($btn,bgcolor),4%);
		color: lighten(map-get($btn,color),10%);
	}
}

// 定义loading的基础构造
// 使用方法请查看 yo-loading.scss
@mixin _loading{
	display: block;
	position: absolute;
	z-index: map-get($z-index, loading);
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	overflow: hidden;
	min-width: map-get($loading, size) + .2rem;
	min-height: map-get($loading, size) + .2rem;
	text-align: center;
	&:before,
	&:after{
		position: absolute;
		content: "\0020";
	}
	&:before{
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		background-color: map-get($loading, bgcolor);
	}
	&:after{
		top: 50%;
		left: 50%;
		@include square(.04em);
		margin-top: -.02em;
		margin-left: -.02em;
		background: transparent;
		border-radius: 50%;
		@include animation(loading 1s infinite linear);
		@include transform-origin(center);
		box-shadow:
			.35em -.29em,
			.47em -.03em 0 .01em,
			.4em .20em 0 .02em,
			.25em .38em 0 .03em,
			0 .44em 0 .04em,
			-.22em .38em 0 .05em,
			-.38em .24em 0 .05em,
			-.42em 0 0 .06em,
			-.36em -.21em 0 .06em,
			-.2em -.36em 0 .06em,
			0 -.41em 0 .07em;
		color: map-get($loading, bordercolor);
		font-size: map-get($loading, size);
	}
	> .inner{
		position: absolute;
		top: 50%;
		left: 50%;
		@include transform(translate(-50%, -50%));
		margin-top: map-get($loading, size) - .1rem;
		color: map-get($loading, bordercolor);
		font-size: .14rem;
	}
}

// 定义switch的基础构造
// 使用方法请查看 yo-switch.scss
@mixin _switch{
    &[type="checkbox"]{
        @include appearance(none);
        position: relative;
        width: .6rem;
        height: .32rem;
        margin: 0;
        cursor: pointer;
        border: .02rem solid map-get($switch, bordercolor);
        border-radius: .16rem;
        background-color: map-get($switch, bgcolor);
        vertical-align: middle;
        @include transition(border-color .1s ease-out, background-color .1s ease-out);
        &::before{
            position: absolute;
            top: 0;
            left: 0;
            content: "\0020";
            @include square(.28rem);
            border-radius: 50%;
            background-color: map-get($switch, ball-color);
            box-shadow: 0 2px 5px rgba(0,0,0,.3);
            @include transition(transform .1s ease-out);
            @include transform(translate(0, 0) translatez(0));
        }
        &:active,
        &:focus{
            outline: none;
        }
        // &:active{
        //     background-color: map-get($switch, bordercolor);
        // }
        &:checked{
            border-color: map-get($switch, checked-bordercolor);
            background-color: map-get($switch, checked-bgcolor);
            &::before{
                @include transform(translate(100%, 0) translatez(0));
            }
            // &:active::before{
            //     @include transform(translate3d(80%,0,0));
            // }
        }
        &:disabled{
        	&,
        	&:checked{
	            border-color: map-get($switch, disabled-bordercolor);
	            background-color: map-get($switch, disabled-bgcolor);
	        }
            &::before{
                background-color: map-get($switch, disabled-ball-color);
            }
        }
    }
}

// 定义checked的基础构造
// 使用方法请查看 yo-checked.scss
@mixin _checked{
	@if map-get($checked, is-border) {
		&[type="checkbox"]{
			border-radius: .05rem;
		    border: 1px solid map-get($checked, bordercolor);
		    box-shadow: inset 0 .01rem .03rem rgba(100, 100, 100, .1);
		    background-color: map-get($checked, bgcolor);
		}
	}
	// mobile safari上清除appearance后仍然有边框及背景
	&[type="radio"]{
		border: 0 none;
		background-color: transparent;
	}
	&[type="checkbox"],
	&[type="radio"]{
	    @include appearance(none);
	    position: relative;
	    @include square(map-get($checked, size));
	    font-size: map-get($checked, size);
	    cursor: pointer;
	    vertical-align: middle;
	    &::after{
	    	position:absolute;
		    top: 50%;
		    left: 50%;
		    @include transform(translate(-50%, -50%));
	    	@include transition(opacity .5s);
		    @if map-get($checked, type) == tick {
			    content: "✓";
			} @else {
			    content: "●";
			}
		    text-shadow: 0 0 .01rem;
		    font-size: 70%;
	    	opacity: 0;
	    	color: #fff;
	    }
		&:checked::after{
			color: map-get($checked, on-color);
			opacity: 1;
		}
		&:disabled::after{
		    color: map-get($checked, disabled-color);
		}
	}
}

// 定义radio的基础构造
// 使用方法请查看 yo-radio.scss
@mixin _radio{
	&[type="radio"]{
	    @include appearance(none);
	    position: relative;
	    @include square(map-get($radio, size));
	    border-radius: 50%;
	    border: 1px solid map-get($radio, bordercolor);
	    box-shadow: inset 0 .01rem .03rem rgba(100, 100, 100, .1);
	    background-color: map-get($radio, bgcolor);
	    cursor: pointer;
	    vertical-align: middle;
	    &::after{
	    	position:absolute;
		    top: 50%;
		    left: 50%;
		    @include transform(translate(-50%, -50%));
	    	@include transition(opacity .5s);
			content: "●";
		    text-shadow: 0 0 .01rem;
			font-size: 70%;
	    	opacity: 0;
	    	color: #fff;
	    }
	    &:checked{
	    	border-color: map-get($radio, on-bordercolor);
	    	background-color: map-get($radio, on-bgcolor);
	    	&::after{
	    		color: map-get($radio, on-color);
	    		opacity: 1;
		    }
	    }
	    &:active{
	    	opacity: .5;
	    }
		&:disabled{
			border-color: map-get($radio, disabled-bordercolor);
			background-color: map-get($radio, disabled-bgcolor);
			&::after{
			    color: map-get($radio, disabled-color);
			}
		}
	}
}

// 定义checkbox的基础构造
// 使用方法请查看 yo-checkbox.scss
@mixin _checkbox{
	&[type="checkbox"]{
	    @include appearance(none);
	    position: relative;
	    @include square(map-get($checkbox, size));
	    font-size: map-get($checkbox, size);
	    border-radius: .05rem;
	    border: 1px solid map-get($checkbox, bordercolor);
	    box-shadow: inset 0 .01rem .03rem rgba(100, 100, 100, .1);
	    background-color: map-get($checkbox, bgcolor);
	    cursor: pointer;
	    vertical-align: middle;
	    &::after{
	    	position:absolute;
		    top: 50%;
		    left: 50%;
		    @include transform(translate(-50%, -50%));
	    	@include transition(opacity .5s);
			content: "✓";
		    text-shadow: 0 0 .01rem;
			font-size: 70%;
	    	opacity: 0;
			color: #fff;
	    }
	    &:checked{
	    	border-color: map-get($checkbox, on-bordercolor);
	    	background-color: map-get($checkbox, on-bgcolor);
	    	&::after{
	    		color: map-get($checkbox, on-color);
	    		opacity: 1;
		    }
	    }
	    &:active{
	    	opacity: .5;
	    }
		&:disabled{
			border-color: map-get($checkbox, disabled-bordercolor);
			background-color: map-get($checkbox, disabled-bgcolor);
			&::after{
			    color: map-get($checkbox, disabled-color);
			}
		}
	}
}

// 定义badge的基础构造
// 使用方法请查看 yo-badge.scss
@mixin _badge{
	display: inline-block;
	min-width: .22rem;
	min-height: .22rem;
	padding: .03rem .06rem;
	border-radius: .11rem;
	background-color: map-get($badge,bgcolor);
	color: map-get($badge,color);
	font-size: .14rem;
	line-height: .16rem;
	text-align: center;
}